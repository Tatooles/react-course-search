{"version":3,"sources":["SearchAndFilter.js","Sidebar.js","Subsection.js","Section.js","Course.js","CourseArea.js","CourseListItem.js","CourseList.js","CartSubsection.js","CartSection.js","CartCourse.js","Cart.js","App.js","serviceWorker.js","index.js"],"names":["SearchAndFilter","courses","search","subject","minimumCredits","maximumCredits","filteredCourses","forEach","course","credits","checkSearch","push","flag","keywords","includes","trim","Sidebar","props","searchAndFilter","React","createRef","this","setCourses","current","value","e","indexOf","key","preventDefault","subjectOptions","subjects","Card","Body","Title","Form","Group","controlId","onChange","style","width","Label","Control","type","placeholder","autoComplete","ref","as","getSubjectOptions","display","flexDirection","onKeyDown","handleCreditsKeyDown","marginLeft","marginRight","marginTop","className","marginBottom","Button","variant","size","onClick","handleShow","Component","Subsection","addSubsection","data","timeString","Object","keys","time","day","charAt","toUpperCase","slice","state","tm","Accordion","Item","eventKey","Header","number","location","Section","addSection","subsection","subsections","values","whiteSpace","instructor","length","getSubSections","Course","addCourse","section","req","requisites","requisitesString","i","j","reqString","keyword","word","Badge","bg","margin","sections","justifyContent","id","name","getKeywords","description","Row","Col","getSections","CourseArea","undefined","showCourse","getCourses","CourseListItem","clickedCourse","color","Nav","Link","CourseList","changeColor","height","overflowY","fill","CartSubsection","deleteSubsection","CartSection","deleteSection","cartSubsections","getCartSubsections","CartCourse","deleteCourse","cartSections","getCartSections","Cart","argument","cartCourses","cart","getCartCourses","App","copy","JSON","parse","stringify","setState","course1","newCourse","filter","sect","section1","console","log","newSection","subsect","dataFromCallback","show","handleClose","allCourses","fetch","then","res","json","getSubjects","textAlign","backgroundColor","padding","Container","Offcanvas","placement","onHide","closeButton","borderBottomStyle","borderWidth","xs","allData","cartMode","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b5644aef.chunk.js","sourcesContent":["class SearchAndFilter {\r\n  searchAndFilter(courses, search, subject, minimumCredits, maximumCredits) {\r\n    // Courses we display will begin empty, any relevant courses will be added\r\n    let filteredCourses = [];\r\n\r\n    // Course must fulfill all the following criteria in order to be displayed\r\n    courses.forEach(course => {\r\n      if((subject === \"All\" || course.subject === subject)\r\n       && (minimumCredits === \"\" || course.credits >= minimumCredits)\r\n       && (maximumCredits === \"\" || course.credits <= maximumCredits)\r\n       && (search === \"\" || this.checkSearch(course, search))){\r\n        filteredCourses.push(course);\r\n      }\r\n    });\r\n\r\n    return filteredCourses;\r\n  }\r\n\r\n  checkSearch(course, search){\r\n    // Return true or false for whether any keyword of the course contains the search string\r\n    let flag = false;\r\n    for(let keyword of course.keywords){\r\n      if(keyword.includes(search.trim())){\r\n        flag = true;\r\n      }\r\n    }\r\n    return flag;\r\n  }\r\n}\r\n\r\nexport default SearchAndFilter;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport SearchAndFilter from './SearchAndFilter';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass Sidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.searchAndFilter = new SearchAndFilter();\r\n    this.subject = React.createRef();\r\n    this.minimumCredits = React.createRef();\r\n    this.maximumCredits = React.createRef();\r\n    this.search = React.createRef();\r\n  }\r\n\r\n  setCourses() {\r\n    this.props.setCourses(this.searchAndFilter.searchAndFilter(this.props.courses, this.search.current.value, this.subject.current.value, this.minimumCredits.current.value, this.maximumCredits.current.value));\r\n  }\r\n\r\n  handleCreditsKeyDown(e) {\r\n    if (['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'Backspace', 'ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown', 'Tab'].indexOf(e.key) === -1)\r\n      e.preventDefault();\r\n  }\r\n\r\n  getSubjectOptions() {\r\n    let subjectOptions = [];\r\n\r\n    for (const subject of this.props.subjects) {\r\n      subjectOptions.push(<option key={subject}>{subject}</option>);\r\n    }\r\n\r\n    return subjectOptions;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Card>\r\n          <Card.Body>\r\n            <Card.Title>Search and safasd;fa;as;lkdnfa</Card.Title>\r\n            <Form>\r\n              <Form.Group controlId=\"formKeywords\" onChange={() => this.setCourses()} style={{ width: '100%' }}>\r\n                <Form.Label>Search</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Search\" autoComplete=\"off\" ref={this.search} />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formSubject\">\r\n                <Form.Label>Subject</Form.Label>\r\n                <Form.Control as=\"select\" ref={this.subject} onChange={() => this.setCourses()}>\r\n                  {this.getSubjectOptions()}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                <Form.Group controlId=\"minimumCredits\" onChange={() => this.setCourses()} onKeyDown={(e) => this.handleCreditsKeyDown(e)}>\r\n                  <Form.Label>Credits</Form.Label>\r\n                  <Form.Control type=\"text\" placeholder=\"minimum\" autoComplete=\"off\" ref={this.minimumCredits} />\r\n                </Form.Group>\r\n                <div style={{ marginLeft: '5px', marginRight: '5px', marginTop: '38px' }}>to</div>\r\n                <Form.Group controlId=\"maximumCredits\" style={{ marginTop: '32px' }} onChange={() => this.setCourses()} onKeyDown={(e) => this.handleCreditsKeyDown(e)}>\r\n                  <Form.Control type=\"text\" placeholder=\"maximum\" autoComplete=\"off\" ref={this.maximumCredits} />\r\n                </Form.Group>\r\n              </div>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"d-grid gap-2\" style={{marginTop: '10px', marginBottom: '10px'}} >\r\n          <Button variant=\"success\" size=\"lg\" onClick={this.props.handleShow}>\r\n            View Cart\r\n          </Button>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react'\nimport './App.css'\nimport { Button } from 'react-bootstrap';\nimport { Accordion } from 'react-bootstrap';\n\nclass Subsection extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// Parse through time object and create string with days and corresponding times\n\t\tlet timeString = \"\";\n\t\tfor (const day of Object.keys(this.props.data.time)) {\n\t\t\tlet time = day + \": \" + this.props.data.time[day] + \"\\n\";\n\t\t\ttime = time.charAt(0).toUpperCase() + time.slice(1);\n\t\t\ttimeString += time;\n\t\t}\n\n\n\t\tthis.state = { tm: timeString };\n\t}\n\n\taddSubsection = () => {\n\t\tthis.props.addSubsection(this.props.data);\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Accordion>\n\t\t\t\t\t<Accordion.Item eventKey=\"0\">\n\t\t\t\t\t\t<Accordion.Header><p>{this.props.data.number} <Button variant=\"primary\" onClick={this.addSubsection}>Add Subsection</Button></p></Accordion.Header>\n\t\t\t\t\t\t<Accordion.Body>\n\t\t\t\t\t\t\t<div style={{ marginLeft: '40px' }}>\n\t\t\t\t\t\t\t\t<p><strong>Location:</strong> {this.props.data.location}</p>\n\t\t\t\t\t\t\t\t<p style={{ marginBottom: '0px' }}><strong>Meeting Times:</strong></p>\n\t\t\t\t\t\t\t\t<p style={{ marginLeft: '40px' }}>{this.state.tm}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Accordion.Body>\n\t\t\t\t\t</Accordion.Item>\n\t\t\t\t</Accordion>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default Subsection;","import React from 'react'\nimport './App.css'\nimport Subsection from './Subsection.js'\nimport { Button } from 'react-bootstrap';\nimport { Accordion } from 'react-bootstrap';\n\nclass Section extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// Parse through time object and create string with days and corresponding times\n\t\tlet timeString = \"\";\n\t\tfor (const day of Object.keys(this.props.data.time)) {\n\t\t\tlet time = day + \": \" + this.props.data.time[day] + \"\\n\";\n\t\t\ttime = time.charAt(0).toUpperCase() + time.slice(1);\n\t\t\ttimeString += time;\n\t\t}\n\n\n\t\tthis.state = { tm: timeString };\n\t}\n\n\t// Create array of subsections\n\tgetSubSections() {\n\t\tlet subsections = [];\n\n\t\tfor (const subsection of Object.values(this.props.data.subsections)) {\n\t\t\tsubsections.push(\n\t\t\t\t<Subsection\n\t\t\t\t\tkey={subsection.number}\n\t\t\t\t\tdata={subsection}\n\t\t\t\t\taddSubsection={this.addSubsection} />\n\t\t\t)\n\t\t}\n\n\t\treturn subsections;\n\t}\n\n\taddSection = () => {\n\t\tthis.props.addSection(this.props.data);\n\t}\n\n\taddSubsection = (subsection) => {\n\t\tthis.props.addSubsection(this.props.data, subsection);\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Accordion>\n\t\t\t\t\t<Accordion.Item eventKey=\"0\">\n\t\t\t\t\t\t<Accordion.Header><h4>{this.props.data.number} <Button variant=\"primary\" onClick={this.addSection}>Add Section</Button></h4></Accordion.Header>\n\t\t\t\t\t\t<Accordion.Body>\n\t\t\t\t\t\t\t<div style={{ marginLeft: '40px', whiteSpace: 'pre-line' }}>\n\t\t\t\t\t\t\t\t<p><strong>Instructor:</strong> {this.props.data.instructor}</p>\n\t\t\t\t\t\t\t\t<p><strong>Location:</strong> {this.props.data.location}</p>\n\t\t\t\t\t\t\t\t<p style={{ marginBottom: '0px' }}><strong>Meeting Times:</strong></p>\n\t\t\t\t\t\t\t\t<p style={{ marginLeft: '40px' }}>{this.state.tm}</p>\n\t\t\t\t\t\t\t\t{this.props.data.subsections.length > 0 && <h5>Subsections</h5>}\n\t\t\t\t\t\t\t\t{this.getSubSections()}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Accordion.Body>\n\t\t\t\t\t</Accordion.Item>\n\t\t\t\t</Accordion>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default Section;","import React from 'react';\r\nimport './App.css';\r\nimport Section from './Section'\r\nimport { Button } from 'react-bootstrap';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass Course extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Parse through requisites and create string according to specified format\r\n    let req = this.props.data.requisites;\r\n    let requisitesString = \"\";\r\n    if (req.length === 0) {\r\n      requisitesString = \"None\";\r\n    } else {\r\n      for (let i = 0; i < req.length; i++) {\r\n        requisitesString += \"(\"\r\n        if (req[i].length > 1) {\r\n          for (let j = 0; j < req[i].length; j++) {\r\n            requisitesString += req[i][j];\r\n            if (j !== req[i].length - 1) {\r\n              requisitesString += \" OR \"\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          requisitesString += req[i][0];\r\n        }\r\n        requisitesString += \")\"\r\n        if (i !== req.length - 1) {\r\n          requisitesString += \" AND \"\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    // Add strings to state so they can be accessed in render()\r\n    this.state = { reqString: requisitesString };\r\n\r\n  }\r\n\r\n  getKeywords() {\r\n    let keywords = [];\r\n\r\n    for (const keyword of this.props.data.keywords) {\r\n      let word = keyword.charAt(0).toUpperCase() + keyword.slice(1);\r\n      keywords.push(\r\n        <Badge key={word} bg=\"secondary\" style={{ margin: '5px' }}>{word}</Badge>\r\n      )\r\n    }\r\n\r\n    return keywords;\r\n  }\r\n\r\n  // Creates array of sections to be displayed\r\n  getSections() {\r\n    let sections = [];\r\n\r\n    for (const section of this.props.data.sections) {\r\n      sections.push(\r\n        <Section\r\n          key={section.number}\r\n          data={section}\r\n          addSection={this.addSection}\r\n          addSubsection={this.addSubsection} />\r\n      )\r\n    }\r\n\r\n    return sections;\r\n  }\r\n\r\n  addCourse = () => {\r\n    this.props.addCourse(this.props.data)\r\n  }\r\n\r\n  addSection = (section) => {\r\n    this.props.addSection(this.props.data, section);\r\n  }\r\n\r\n  addSubsection = (section, subsection) => {\r\n    this.props.addSubsection(this.props.data, section, subsection);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <h3>{this.props.data.number}</h3>\r\n          <Button variant=\"primary\" id=\"addCourse\" size='lg' onClick={this.addCourse}>Add Course</Button>\r\n        </div>\r\n        <h4>{this.props.data.name}</h4>\r\n        {this.getKeywords()}\r\n        <p>{this.props.data.description}</p>\r\n        <Row>\r\n          <Col>\r\n            <p><strong>Credits:</strong> {this.props.data.credits}</p>\r\n            <p><strong>Requisites:</strong> {this.state.reqString}</p>\r\n            <p><strong>Subject:</strong> {this.props.data.subject}</p>\r\n          </Col>\r\n        </Row>\r\n\r\n        <h3>Sections</h3>\r\n        {this.getSections()}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Course;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Course from './Course';\r\n\r\nclass CourseArea extends React.Component {\r\n  getCourses() {\r\n    let courses = [];\r\n\r\n    for (const course of Object.values(this.props.data)) {\r\n      if(this.props.showCourse !== undefined && course.number === this.props.showCourse.number){\r\n        courses.push(\r\n          <Course\r\n            key={course.name}\r\n            data={course}\r\n            addCourse={this.addCourse}\r\n            addSection={this.addSection}\r\n            addSubsection={this.addSubsection} />\r\n        )\r\n      }\r\n    }\r\n\r\n    return courses;\r\n  }\r\n\r\n  addCourse = (course) => {\r\n    this.props.addCourse(course);\r\n  }\r\n\r\n  addSection = (course, section) => {\r\n    this.props.addSection(course, section);\r\n  }\r\n\r\n  addSubsection = (course, section, subsection) => {\r\n    this.props.addSubsection(course, section, subsection);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.getCourses()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CourseArea;\r\n","import React from 'react';\nimport './App.css';\nimport Nav from 'react-bootstrap/Nav';\n\nclass CourseListItem extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            color: 'white'\n        }\n    }\n\n    onClick = () => {\n        this.props.clickedCourse(this.props.number);\n\n    }\n\n    render() {\n        return (\n            <Nav.Link id=\"listItem\" onClick={this.onClick}>{this.props.number}</Nav.Link>\n            // <div id=\"listItem\" style={{ textAlign: 'center' }}>\n            //     <h1 onClick={this.onClick}>{this.props.number}</h1>\n            // </div>\n        )\n    }\n}\n\nexport default CourseListItem;\n","import React from 'react';\r\nimport './App.css';\r\nimport CourseListItem from './CourseListItem';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nclass CourseList extends React.Component {\r\n  getCourses() {\r\n    let courses = [];\r\n\r\n    for (const course of Object.values(this.props.data)) {\r\n      courses.push(\r\n        <CourseListItem\r\n          key={course.number}\r\n          number={course.number}\r\n          clickedCourse={this.clickedCourse}\r\n          changeColor={this.changeColor}\r\n        />\r\n      )\r\n    }\r\n\r\n    return courses;\r\n  }\r\n\r\n  clickedCourse = (number) => {\r\n    this.props.clickedCourse(number);\r\n  }\r\n\r\n  changeColor = () => {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ height: '45vh', overflowY: 'auto' }}>\r\n        <Nav fill className=\"flex-column\">\r\n          {this.getCourses()}\r\n        </Nav>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CourseList;\r\n","import React from 'react';\nimport './App.css';\nimport { Button } from 'react-bootstrap';\n\nclass CartSubsection extends React.Component {\n    deleteSubsection = () => {\n        this.props.deleteSubsection(this.props.data.number);\n    }\n\n    render(){\n        return (\n            <div style={{ marginLeft: '40px' }}>\n                <p>{this.props.data.number} <Button variant=\"danger\" onClick={this.deleteSubsection}>Remove Subsection</Button></p>\n            </div>\n        )\n    }\n}\n\nexport default CartSubsection;","import React from 'react';\nimport CartSubsection from './CartSubsection';\nimport './App.css';\nimport { Button } from 'react-bootstrap';\nimport { Accordion } from 'react-bootstrap';\n\nclass CartSection extends React.Component {\n    getCartSubsections() {\n        let cartSubsections = [];\n\n        for (const subsection of this.props.data.subsections) {\n            cartSubsections.push(\n                <CartSubsection\n                    key={subsection.number}\n                    data={subsection}\n                    deleteSubsection={this.deleteSubsection} />\n            )\n        }\n\n        return cartSubsections;\n    }\n\n    // Gonna need to use a callback to delete items from the cart\n    deleteSection = () => {\n        this.props.deleteSection(this.props.data.number);\n    }\n\n    deleteSubsection = (subsection) => {\n        this.props.deleteSubsection(this.props.data.number, subsection);\n    }\n\n    render() {\n        if(this.getCartSubsections().length === 0){\n            return (\n                <Accordion>\n                    <Accordion.Item eventKey=\"0\">\n                        <Accordion.Header><h5>{this.props.data.number} <Button variant=\"danger\" onClick={this.deleteSection}>Remove Section</Button></h5>\n                        </Accordion.Header>\n                    </Accordion.Item>\n                </Accordion>\n            )\n        }\n        return (\n                <Accordion>\n                    <Accordion.Item eventKey=\"0\">\n                        <Accordion.Header><h5>{this.props.data.number} <Button variant=\"danger\" onClick={this.deleteSection}>Remove Section</Button></h5>\n                        </Accordion.Header>\n                        <Accordion.Body>\n                            <div style={{ marginLeft: '40px', whiteSpace: 'pre-line' }}>\n                            {this.getCartSubsections()}\n                            </div>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n        )\n    }\n}\n\nexport default CartSection;","import React from 'react';\nimport CartSection from './CartSection'\nimport './App.css';\nimport { Button } from 'react-bootstrap';\nimport { Accordion } from 'react-bootstrap';\n\nclass CartCourse extends React.Component {\n    getCartSections() {\n        let cartSections = [];\n\n        for (const section of this.props.data.sections) {\n            cartSections.push(\n                <CartSection\n                    key={section.number}\n                    data={section}\n                    deleteSection={this.deleteSection}\n                    deleteSubsection={this.deleteSubsection} />\n            )\n        }\n\n        return cartSections;\n    }\n\n    deleteCourse = () => {\n        this.props.deleteCourse(this.props.data.number);\n    }\n\n    deleteSection = (section) => {\n        this.props.deleteSection(this.props.data.number, section);\n    }\n\n    deleteSubsection = (section, subsection) => {\n        this.props.deleteSubsection(this.props.data.number, section, subsection);\n    }\n\n    render() {\n        if (this.getCartSections().length === 0) {\n            return (\n                <Accordion>\n                    <Accordion.Item eventKey=\"0\">\n                        <Accordion.Header><h3>{this.props.data.number} <Button variant=\"danger\" onClick={this.deleteCourse}>Remove Course</Button></h3>\n                        </Accordion.Header>\n                    </Accordion.Item>\n                </Accordion>\n            )\n        }\n        return (\n            <Accordion>\n                <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header>\n                        <h3>{this.props.data.number} <Button variant=\"danger\" onClick={this.deleteCourse}>Remove Course</Button></h3>\n                    </Accordion.Header>\n                    <Accordion.Body>\n                        {this.getCartSections()}\n                    </Accordion.Body>\n                </Accordion.Item>\n            </Accordion>\n            // <div>\n            //     <h3>{this.props.data.number} <Button variant=\"danger\" onClick={this.deleteCourse}>Remove Course</Button></h3>\n            //     {this.getCartSections()}\n            // </div>\n        )\n    }\n}\n\nexport default CartCourse;","import React from 'react';\nimport CartCourse from './CartCourse'\nimport './App.css';\n\nclass Cart extends React.Component {\n    getCartCourses() {\n        let cartCourses = [];\n\n        for (const course of this.props.cart) {\n            cartCourses.push(\n                <CartCourse\n                    key={course.name}\n                    data={course}\n                    deleteCourse={this.deleteCourse}\n                    deleteSection={this.deleteSection}\n                    deleteSubsection={this.deleteSubsection} />\n            )\n        }\n\n        return cartCourses;\n    }\n\n    // Gonna need to use a callback to delete items from the cart\n    deleteCourse = (argument) => {\n        this.props.deleteCourse(argument)\n    }\n\n    deleteSection = (number, section) => {\n        this.props.deleteSection(number, section);\n    }\n\n    deleteSubsection = (number, section, subsection) => {\n        this.props.deleteSubsection(number, section, subsection);\n    }\n\n    render() {\n        return (\n            <div>\n                {this.getCartCourses()}\n            </div>\n        )\n    }\n}\n\nexport default Cart;","import React from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./Sidebar\";\nimport CourseArea from \"./CourseArea\";\nimport CourseList from \"./CourseList\";\nimport Cart from './Cart'\nimport Offcanvas from 'react-bootstrap/Offcanvas';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allCourses: {},\n      filteredCourses: {},\n      subjects: [],\n      cartCourses: [],\n      show: false,\n      showCourse: undefined,\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://cs571.cs.wisc.edu/api/react/classes\")\n      .then((res) => res.json())\n      .then((data) =>\n        this.setState({\n          allCourses: data,\n          filteredCourses: data,\n          subjects: this.getSubjects(data),\n        })\n      );\n  }\n\n  getSubjects(data) {\n    let subjects = [];\n    subjects.push(\"All\");\n\n    for (const course of Object.values(data)) {\n      if (subjects.indexOf(course.subject) === -1)\n        subjects.push(course.subject);\n    }\n\n    return subjects;\n  }\n\n  setCourses(courses) {\n    this.setState({ filteredCourses: courses });\n  }\n\n  // Make sure it's not a dupe, then add the course to the cart array\n  addCourse = (course) => {\n    for (let course1 of this.state.cartCourses) {\n      if (course1.number === course.number) {\n        this.deleteCourse(course.number);\n      }\n    }\n    let copy = JSON.parse(JSON.stringify(course));\n    this.setState((state, props) => ({\n      cartCourses: [\n        ...state.cartCourses,\n        copy\n      ]\n    }));\n  }\n\n  // To add a section there are 3 cases:\n  // Case 1: The section is already in the cart, in which case we do nothing\n  // Case 2: The course is in the cart without the chosen section, in which case we simply push the section to the course's sections array\n  // Case 3: The course is not in the cart, in which case we add a copy of the course with the other sections filtered out\n  addSection = (course, section) => {\n    let copy = [...this.state.cartCourses];\n    for (let course1 of copy) {\n      if (course1.number === course.number) {\n        // Cart contains the course\n        for (let section1 of course1.sections) {\n          if (section1.number === section.number) {\n            this.deleteSection(course.number, section.number);\n          }\n        }\n        // Need to add just the course\n        course1.sections.push(section);\n        this.setState({\n          cartCourses: copy\n        });\n        return;\n      }\n    }\n\n    let newCourse = JSON.parse(JSON.stringify(course));\n    // Now just need to filter the correct section from this new course\n    newCourse.sections = newCourse.sections.filter(function (sect) {\n      return sect.number === section.number;\n    });\n\n    copy.push(newCourse);\n    this.setState({\n      cartCourses: copy\n    });\n  }\n\n  // To add a subsection there are 4 cases:\n  // Case 1: The subsection is already in the cart, no further action needed\n  // Case 2: The section is in the cart without the subsection, in which case we push the subsection to the section's subsection array\n  // Case 3: The course is in the cart without the section, in which case we need to add the section to the course with the other subsections filtered out\n  // Case 4: The course is not in the cart, in which case we need to add the course to the cart with all other sections and subsections fltered out\n  addSubsection = (course, section, subsection) => {\n    let copy = [...this.state.cartCourses];\n    for (let course1 of copy) {\n      if (course1.number === course.number) {\n        for (let section1 of course1.sections) {\n          if (section1.number === section.number) {\n            for (let subsection1 of section1.subsections) {\n              if (subsection1.number === subsection.number) {\n                console.log(\"Subsection already in cart\");\n                return;\n              }\n            }\n            // Just need to append subsection\n            section1.subsections.push(subsection);\n            this.setState({\n              cartCourses: copy\n            });\n            return;\n          }\n        }\n\n        // Need to add section and course\n        let newSection = JSON.parse(JSON.stringify(section));\n        newSection.subsections = newSection.subsections.filter(function (subsect) {\n          return subsect.number === subsection.number;\n        });\n\n        course1.sections.push(newSection);\n        this.setState({\n          cartCourses: copy\n        });\n        return;\n\n      }\n    }\n\n    // Need to add a new course with a new section that had just the one subsection\n    let newCourse = JSON.parse(JSON.stringify(course));\n    // Now just need to filter the correct section from this new course\n    newCourse.sections = newCourse.sections.filter(function (sect) {\n      return sect.number === section.number;\n    });\n\n    newCourse.sections[0].subsections = newCourse.sections[0].subsections.filter(function (subsect) {\n      return subsect.number === subsection.number;\n    });\n\n    copy.push(newCourse);\n    this.setState({\n      cartCourses: copy\n    });\n  }\n\n\n  // Deletes a full course\n  deleteCourse = (dataFromCallback) => {\n    this.setState({\n      cartCourses: this.state.cartCourses.filter(function (course) {\n        return course.number !== dataFromCallback;\n      })\n    });\n  }\n\n  // Filter out a section from the given course\n  deleteSection = (number, section) => {\n    // Gotta filter out this course and section\n    let copy = [...this.state.cartCourses];\n    for (let course of copy) {\n      if (course.number === number) {\n        course.sections = course.sections.filter(function (sect) {\n          return sect.number !== section;\n        });\n      }\n    }\n    this.setState({\n      cartCourses: copy\n    });\n  }\n\n  // Filter out the given subsecton from the given section of the given course\n  deleteSubsection = (number, section, subsection) => {\n    let copy = [...this.state.cartCourses];\n    for (let course of copy) {\n      if (course.number === number) {\n        for (let section1 of course.sections) {\n          if (section1.number === section) {\n            section1.subsections = section1.subsections.filter(function (subsect) {\n              return subsect.number !== subsection;\n            });\n          }\n        }\n      }\n    }\n    this.setState({\n      cartCourses: copy\n    });\n  }\n\n  clickedCourse = (number) => {\n    for (let course of this.state.filteredCourses) {\n      if (course.number === number) {\n        this.setState({\n          showCourse: course\n        });\n      }\n    }\n  }\n\n\n  handleShow = () => {\n    this.setState({ show: true });\n  }\n\n  handleClose = () => {\n    this.setState({ show: false });\n  }\n\n  render() {\n    return (\n      <>\n        <div style={{ textAlign: 'center', backgroundColor: 'lightblue', padding: '10px', height: '10vh' }}>\n          <h1>Course Search & Enroll</h1>\n        </div>\n        <Container>\n          <Offcanvas show={this.state.show} placement=\"end\" onHide={this.handleClose}>\n            <Offcanvas.Header closeButton style={{ borderBottomStyle: 'solid', borderWidth: '2px' }}>\n              <Offcanvas.Title><h1>Your Cart</h1></Offcanvas.Title>\n            </Offcanvas.Header>\n            <Offcanvas.Body>\n              <Cart\n                cart={this.state.cartCourses}\n                deleteCourse={this.deleteCourse}\n                deleteSection={this.deleteSection}\n                deleteSubsection={this.deleteSubsection} />\n            </Offcanvas.Body>\n          </Offcanvas>\n\n          <Row>\n            <Col xs={4} style={{ height: '90vh', overflowY: 'auto' }}>\n              <Sidebar\n                setCourses={(courses) => this.setCourses(courses)}\n                courses={this.state.allCourses}\n                subjects={this.state.subjects}\n                handleShow={this.handleShow}\n              />\n\n              <CourseList id=\"courseList\"\n                data={this.state.filteredCourses}\n                clickedCourse={this.clickedCourse}\n              />\n            </Col>\n            <Col style={{ height: '87vh', overflowY: 'auto', marginTop: '3vh' }}>\n              <CourseArea\n                data={this.state.filteredCourses}\n                allData={this.state.allCourses}\n                cartMode={false}\n                addCourse={this.addCourse}\n                addSection={this.addSection}\n                addSubsection={this.addSubsection}\n                showCourse={this.state.showCourse}\n              />\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}